[tox]
envlist = py39,py310,py311,py312,flake8,mypy,coverage
isolated_build = true

[testenv]
deps = 
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-test.txt
commands = 
    pytest {posargs}
setenv =
    PYTHONPATH = {toxinidir}

[testenv:py39]
basepython = python3.9

[testenv:py310] 
basepython = python3.10

[testenv:py311]
basepython = python3.11

[testenv:py312]
basepython = python3.12

[testenv:flake8]
deps = flake8
commands = flake8 text_manipulation tests

[testenv:mypy]
deps = 
    mypy
    types-requests
    types-colorama
commands = mypy text_manipulation

[testenv:coverage]
deps = 
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-test.txt
commands = 
    coverage erase
    pytest --cov=text_manipulation --cov-report=html --cov-report=xml --cov-report=term
    coverage report --fail-under=80

[testenv:integration]
deps = 
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-test.txt
commands = 
    pytest -m integration {posargs}

[testenv:unit]
deps = 
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-test.txt
commands = 
    pytest -m unit {posargs}

[testenv:slow]
deps = 
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-test.txt
commands = 
    pytest -m slow {posargs}

[flake8]
max-line-length = 100
exclude = 
    .git,
    __pycache__,
    build,
    dist,
    *.egg-info,
    .tox,
    .venv,
    venv,
    tests/fixtures
ignore = 
    E203,  # whitespace before ':'
    W503,  # line break before binary operator
per-file-ignores =
    tests/*:F401,F811,E501
    conftest.py:F401,E501

[coverage:run]
source = text_manipulation
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
show_missing = true
skip_covered = false 